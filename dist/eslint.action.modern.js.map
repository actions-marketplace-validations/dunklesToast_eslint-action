{"version":3,"file":"eslint.action.modern.js","sources":["../src/eslint.action.ts"],"sourcesContent":["import { getInput, info } from '@actions/core';\nimport { context, getOctokit } from '@actions/github';\nimport { Context } from '@actions/github/lib/context';\nimport { ESLint } from 'eslint';\n\nclass ESLintAction {\n    private readonly eslintFolder: string;\n\n    private readonly eslintConfig: string;\n\n    private readonly authToken: string | null;\n\n    private readonly context: Context;\n\n    constructor() {\n        this.eslintFolder = getInput('eslintFolder') || '.';\n        this.eslintConfig = getInput('eslintConfig') || '.eslintrc.js';\n        this.authToken = getInput('authToken') || null;\n        this.context = context;\n        info(`Starting ESLint GitHub Action`);\n        info('Configuration:');\n        info(`ESLint Folder: \"${this.eslintFolder}\"`);\n        this.runLinter().then(async (body) => {\n            await this.comment(body);\n        });\n    }\n\n    private async runLinter() {\n        const linter = new ESLint({\n            overrideConfigFile: this.eslintConfig,\n        });\n        const results = await linter.lintFiles(this.eslintFolder);\n        let comment = `# ESLint found ${results.length} files with issues\\r\\n`;\n        results.forEach((result) => {\n            comment += `### ${result.errorCount} issues in ${result.filePath}\\r\\n`;\n            result.messages.forEach((message) => {\n                comment += `${message.message}\\r\\n`;\n            });\n        });\n        return comment;\n    }\n\n    private async comment(body: string) {\n        if (this.authToken === null) {\n            info(\"No authToken provided. Won't post comment\");\n            info(body);\n            return;\n        }\n        const kit = getOctokit(this.authToken);\n        await kit.issues.createComment({\n            issue_number: context.issue.number,\n            body,\n            repo: context.repo.repo,\n            owner: context.repo.owner,\n        });\n    }\n}\n\nconst x = new ESLintAction();\n"],"names":["constructor","this","eslintFolder","getInput","eslintConfig","authToken","context","info","runLinter","then","async","body","_this","comment","[object Object]","linter","ESLint","overrideConfigFile","results","lintFiles","length","forEach","result","errorCount","filePath","messages","message","kit","getOctokit","issues","createComment","issue_number","issue","number","repo","owner"],"mappings":"6IA0DU,IArDV,MASIA,yBACIC,KAAKC,aAAeC,EAAS,iBAAmB,IAChDF,KAAKG,aAAeD,EAAS,iBAAmB,eAChDF,KAAKI,UAAYF,EAAS,cAAgB,KAC1CF,KAAKK,QAAUA,EACfC,mCACAA,EAAK,kBACLA,qBAAwBN,KAAKC,iBAC7BD,KAAKO,YAAYC,KAAKC,eAAOC,SACnBC,EAAKC,QAAQF,KAInBG,kBACJ,MAAMC,EAAS,IAAIC,EAAO,CACtBC,mBAAoBhB,KAAKG,eAEvBc,QAAgBH,EAAOI,UAAUlB,KAAKC,cAC5C,IAAIW,oBAA4BK,EAAQE,+BAOxC,OANAF,EAAQG,QAASC,IACbT,UAAkBS,EAAOC,wBAAwBD,EAAOE,eACxDF,EAAOG,SAASJ,QAASK,IACrBb,GAAca,EAAQA,mBAGvBb,EAGHC,cAAcH,GAClB,GAAuB,OAAnBV,KAAKI,UAGL,OAFAE,EAAK,kDACLA,EAAKI,GAGT,MAAMgB,EAAMC,EAAW3B,KAAKI,iBACtBsB,EAAIE,OAAOC,cAAc,CAC3BC,aAAczB,EAAQ0B,MAAMC,OAC5BtB,KAAAA,EACAuB,KAAM5B,EAAQ4B,KAAKA,KACnBC,MAAO7B,EAAQ4B,KAAKC"}