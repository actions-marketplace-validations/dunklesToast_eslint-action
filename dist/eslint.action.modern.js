import{getInput as t,info as n}from"@actions/core";import{context as e,getOctokit as i}from"@actions/github";import{ESLint as o}from"eslint";new class{constructor(){var i=this;this.eslintFolder=t("eslintFolder")||".",this.eslintConfig=t("eslintConfig")||".eslintrc.js",this.authToken=t("authToken")||null,this.context=e,n("Starting ESLint GitHub Action"),n("Configuration:"),n(`ESLint Folder: "${this.eslintFolder}"`),this.runLinter().then(async function(t){await i.comment(t)})}async runLinter(){const t=new o({overrideConfigFile:this.eslintConfig}),n=await t.lintFiles(this.eslintFolder);let e=`# ESLint found ${n.length} files with issues\r\n`;return n.forEach(t=>{e+=`### ${t.errorCount} issues in ${t.filePath}\r\n`,t.messages.forEach(t=>{e+=t.message+"\r\n"})}),e}async comment(t){if(null===this.authToken)return n("No authToken provided. Won't post comment"),void n(t);const o=i(this.authToken);await o.issues.createComment({issue_number:e.issue.number,body:t,repo:e.repo.repo,owner:e.repo.owner})}};
//# sourceMappingURL=eslint.action.modern.js.map
