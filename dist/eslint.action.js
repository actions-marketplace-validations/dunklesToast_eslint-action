function _interopDefault(e){return e&&"object"==typeof e&&"default"in e?e.default:e}var os=_interopDefault(require("os")),path=_interopDefault(require("path")),child_process=require("child_process"),commonjsGlobal="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};function unwrapExports(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}function createCommonjsModule(e,n,o){return e(o={path:n,exports:{},require:function(e,n){return commonjsRequire()}},o.exports),o.exports}function commonjsRequire(){throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs")}var command=createCommonjsModule(function(e,n){var o=commonjsGlobal&&commonjsGlobal.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var o in e)Object.hasOwnProperty.call(e,o)&&(n[o]=e[o]);return n.default=e,n};Object.defineProperty(n,"__esModule",{value:!0});const t=o(os);function r(e,n,o){const r=new s(e,n,o);process.stdout.write(r.toString()+t.EOL)}n.issueCommand=r,n.issue=function(e,n=""){r(e,{},n)};class s{constructor(e,n,o){e||(e="missing.command"),this.command=e,this.properties=n,this.message=o}toString(){let e="::"+this.command;if(this.properties&&Object.keys(this.properties).length>0){e+=" ";let o=!0;for(const t in this.properties)if(this.properties.hasOwnProperty(t)){const r=this.properties[t];r&&(o?o=!1:e+=",",e+=`${t}=${n=r,i(n).replace(/%/g,"%25").replace(/\r/g,"%0D").replace(/\n/g,"%0A").replace(/:/g,"%3A").replace(/,/g,"%2C")}`)}}var n;return e+="::"+function(e){return i(e).replace(/%/g,"%25").replace(/\r/g,"%0D").replace(/\n/g,"%0A")}(this.message),e}}function i(e){return null==e?"":"string"==typeof e||e instanceof String?e:JSON.stringify(e)}n.toCommandValue=i}),core=createCommonjsModule(function(e,n){var o=commonjsGlobal&&commonjsGlobal.__awaiter||function(e,n,o,t){return new(o||(o=Promise))(function(r,s){function i(e){try{u(t.next(e))}catch(e){s(e)}}function c(e){try{u(t.throw(e))}catch(e){s(e)}}function u(e){var n;e.done?r(e.value):(n=e.value,n instanceof o?n:new o(function(e){e(n)})).then(i,c)}u((t=t.apply(e,n||[])).next())})},t=commonjsGlobal&&commonjsGlobal.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var o in e)Object.hasOwnProperty.call(e,o)&&(n[o]=e[o]);return n.default=e,n};Object.defineProperty(n,"__esModule",{value:!0});const r=t(os),s=t(path);var i;function c(e){command.issue("error",e instanceof Error?e.toString():e)}function u(e){command.issue("group",e)}function a(){command.issue("endgroup")}!function(e){e[e.Success=0]="Success",e[e.Failure=1]="Failure"}(i=n.ExitCode||(n.ExitCode={})),n.exportVariable=function(e,n){const o=command.toCommandValue(n);process.env[e]=o,command.issueCommand("set-env",{name:e},o)},n.setSecret=function(e){command.issueCommand("add-mask",{},e)},n.addPath=function(e){command.issueCommand("add-path",{},e),process.env.PATH=`${e}${s.delimiter}${process.env.PATH}`},n.getInput=function(e,n){const o=process.env["INPUT_"+e.replace(/ /g,"_").toUpperCase()]||"";if(n&&n.required&&!o)throw new Error("Input required and not supplied: "+e);return o.trim()},n.setOutput=function(e,n){command.issueCommand("set-output",{name:e},n)},n.setCommandEcho=function(e){command.issue("echo",e?"on":"off")},n.setFailed=function(e){process.exitCode=i.Failure,c(e)},n.isDebug=function(){return"1"===process.env.RUNNER_DEBUG},n.debug=function(e){command.issueCommand("debug",{},e)},n.error=c,n.warning=function(e){command.issue("warning",e instanceof Error?e.toString():e)},n.info=function(e){process.stdout.write(e+r.EOL)},n.startGroup=u,n.endGroup=a,n.group=function(e,n){return o(this,void 0,void 0,function*(){let o;u(e);try{o=yield n()}finally{a()}return o})},n.saveState=function(e,n){command.issueCommand("save-state",{name:e},n)},n.getState=function(e){return process.env["STATE_"+e]||""}}),core$1=unwrapExports(core);class ESLintAction{constructor(){this.eslintBinary=core.getInput("eslintBinary")||"eslint",this.eslintFolder=core.getInput("eslintFolder")||".",console.log("Starting ESLint GitHub Action"),console.log("Configuration:"),console.log(`ESLint Binary: "${this.eslintBinary}"`),console.log(`ESLint Folder: "${this.eslintFolder}"`),this.runCommand()}runCommand(){const{status:e,stdout:n,stderr:o,error:t}=child_process.spawnSync(this.eslintBinary,[this.eslintFolder]);0===e?console.log("✓ ESLint returned no errors"):(console.error("× ESLint returned an error."),console.error(null==o?void 0:o.toString()),console.error(null==n?void 0:n.toString()),(null==t?void 0:t.message)&&console.log(t.message),process.exit(e||1))}}const x=new ESLintAction;
